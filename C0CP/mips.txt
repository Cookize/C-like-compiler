.data
s$0 : .asciiz "take"
s$1 : .asciiz "from"
s$2 : .asciiz "to"
s$3 : .asciiz "************************************************"
s$4 : .asciiz "Start testing recursion:"
s$5 : .asciiz "************************************************"
.text
jal main
addi $v0, $0, 10
syscall
hanoi:
sw $ra, -0($sp)
sw $fp, -4($sp)
addu $fp, $0, $sp
addi $sp, $sp, -20
lw $t0, 16($fp)
addi $t8, $0, 0
ble $t0, $t8, LABEL_0
lw $t0, 16($fp)
lw $t1, -8($fp)
addi $t1, $t0, -1
sw $t1, 0($sp)
lw $t2, 12($fp)
sw $t2, -4($sp)
lw $t3, 4($fp)
sw $t3, -8($sp)
lw $t4, 8($fp)
sw $t4, -12($sp)
addi $sp, $sp, -16
sw $t1, -8($fp)
jal hanoi
la $a0, s$0
addi $v0, $0, 4
syscall
addi $v0, $0, 11
addi $a0, $0, 10
syscall
addi $v0, $0, 1
lw $t0, 16($fp)
addu $a0, $t0, $0
syscall
addi $v0, $0, 11
addi $a0, $0, 10
syscall
la $a0, s$1
addi $v0, $0, 4
syscall
addi $v0, $0, 11
addi $a0, $0, 10
syscall
addi $v0, $0, 11
lw $t1, 12($fp)
addu $a0, $t1, $0
syscall
addi $v0, $0, 11
addi $a0, $0, 10
syscall
la $a0, s$2
addi $v0, $0, 4
syscall
addi $v0, $0, 11
addi $a0, $0, 10
syscall
addi $v0, $0, 11
lw $t2, 4($fp)
addu $a0, $t2, $0
syscall
addi $v0, $0, 11
addi $a0, $0, 10
syscall
lw $t3, -8($fp)
addi $t3, $t0, -1
sw $t3, 0($sp)
lw $t4, 8($fp)
sw $t4, -4($sp)
sw $t1, -8($sp)
sw $t2, -12($sp)
addi $sp, $sp, -16
sw $t3, -8($fp)
jal hanoi
LABEL_0:
lw $ra, -0($fp)
addi $sp, $fp, 16
lw $fp, -4($fp)
jr $ra
Fibonacci:
sw $ra, -0($sp)
sw $fp, -4($sp)
addu $fp, $0, $sp
addi $sp, $sp, -32
lw $t0, 4($fp)
addi $t8, $0, 0
bne $t0, $t8, LABEL_1
addi $v0, $0, 0
lw $ra, -0($fp)
addi $sp, $fp, 4
lw $fp, -4($fp)
jr $ra
LABEL_1:
lw $t0, 4($fp)
addi $t8, $0, 1
bne $t0, $t8, LABEL_2
addi $v0, $0, 1
lw $ra, -0($fp)
addi $sp, $fp, 4
lw $fp, -4($fp)
jr $ra
LABEL_2:
lw $t0, 4($fp)
lw $t1, -8($fp)
addi $t1, $t0, -1
sw $t1, 0($sp)
addi $sp, $sp, -4
sw $t1, -8($fp)
jal Fibonacci
lw $t0, -12($fp)
addu $t0, $v0, $0
lw $t1, 4($fp)
lw $t2, -16($fp)
addi $t2, $t1, -2
sw $t2, 0($sp)
addi $sp, $sp, -4
sw $t2, -16($fp)
sw $t0, -12($fp)
jal Fibonacci
lw $t0, -12($fp)
lw $t1, -24($fp)
addu $t1, $t0, $v0
addu $v0, $t1, $0
sw $t1, -24($fp)
lw $ra, -0($fp)
addi $sp, $fp, 4
lw $fp, -4($fp)
jr $ra
fac:
sw $ra, -0($sp)
sw $fp, -4($sp)
addu $fp, $0, $sp
addi $sp, $sp, -24
lw $t0, 4($fp)
addi $t8, $0, 1
bne $t0, $t8, LABEL_3
addi $v0, $0, 1
lw $ra, -0($fp)
addi $sp, $fp, 4
lw $fp, -4($fp)
jr $ra
LABEL_3:
lw $t0, 4($fp)
lw $t1, -8($fp)
addi $t1, $t0, -1
sw $t1, 0($sp)
addi $sp, $sp, -4
sw $t1, -8($fp)
jal fac
lw $t0, 4($fp)
lw $t1, -16($fp)
mul $t0, $v0
mflo $t1
addu $v0, $t1, $0
sw $t1, -16($fp)
lw $ra, -0($fp)
addi $sp, $fp, 4
lw $fp, -4($fp)
jr $ra
testRecursion:
sw $ra, -0($sp)
sw $fp, -4($sp)
addu $fp, $0, $sp
addi $sp, $sp, -64
addi $t9, $0, 2
sw $t9, 0($sp)
addi $sp, $sp, -4
jal fac
lw $t0, -8($fp)
addu $t0, $v0, $0
addi $t9, $0, 3
sw $t9, 0($sp)
addi $sp, $sp, -4
sw $t0, -8($fp)
jal fac
lw $t0, -8($fp)
lw $t1, -16($fp)
mul $t0, $v0
mflo $t1
sw $t1, 0($sp)
addi $sp, $sp, -4
sw $t1, -16($fp)
jal Fibonacci
lw $t0, -20($fp)
addu $t0, $v0, $0
addi $t9, $0, 3
sw $t9, 0($sp)
addi $sp, $sp, -4
sw $t0, -20($fp)
jal Fibonacci
lw $t0, -24($fp)
addu $t0, $v0, $0
addi $t9, $0, 4
sw $t9, 0($sp)
addi $sp, $sp, -4
sw $t0, -24($fp)
jal Fibonacci
lw $t0, -24($fp)
lw $t1, -32($fp)
addu $t1, $t0, $v0
sw $t1, 0($sp)
addi $sp, $sp, -4
sw $t1, -32($fp)
jal fac
lw $t0, -20($fp)
lw $t1, -40($fp)
sub $t1, $t0, $v0
addi $t9, $0, 2
sw $t9, 0($sp)
addi $sp, $sp, -4
sw $t1, -40($fp)
jal Fibonacci
lw $t0, -44($fp)
addu $t0, $v0, $0
addi $t9, $0, 3
sw $t9, 0($sp)
addi $sp, $sp, -4
sw $t0, -44($fp)
jal Fibonacci
lw $t0, -44($fp)
lw $t1, -52($fp)
addu $t1, $t0, $v0
sw $t1, 0($sp)
addi $sp, $sp, -4
sw $t1, -52($fp)
jal fac
lw $t0, -40($fp)
lw $t1, -60($fp)
div $t0, $v0
mflo $t1
sw $t1, 0($sp)
addi $t9, $0, 97
sw $t9, -4($sp)
addi $t9, $0, 98
sw $t9, -8($sp)
addi $t9, $0, 99
sw $t9, -12($sp)
addi $sp, $sp, -16
sw $t1, -60($fp)
jal hanoi
lw $ra, -0($fp)
addi $sp, $fp, 0
lw $fp, -4($fp)
jr $ra
main:
addu $fp, $sp, $0
sw $ra, -0($sp)
sw $fp, -4($sp)
addu $fp, $0, $sp
addi $sp, $sp, -8
la $a0, s$3
addi $v0, $0, 4
syscall
addi $v0, $0, 11
addi $a0, $0, 10
syscall
la $a0, s$4
addi $v0, $0, 4
syscall
addi $v0, $0, 11
addi $a0, $0, 10
syscall
jal testRecursion
la $a0, s$5
addi $v0, $0, 4
syscall
addi $v0, $0, 11
addi $a0, $0, 10
syscall
lw $ra, -0($fp)
addi $sp, $fp, 0
lw $fp, -4($fp)
jr $ra
