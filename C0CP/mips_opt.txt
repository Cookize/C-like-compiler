.data
s$0 : .asciiz "take"
s$1 : .asciiz "from"
s$2 : .asciiz "to"
s$3 : .asciiz "************************************************"
s$4 : .asciiz "Start testing recursion:"
s$5 : .asciiz "************************************************"
.text
jal main
addi $v0, $0, 10
syscall
hanoi:
sw $s0, -12($sp)
sw $s1, -16($sp)
sw $s2, -20($sp)
sw $s3, -24($sp)
lw $s3, 16($sp)
lw $s2, 12($sp)
lw $s1, 4($sp)
lw $s0, 8($sp)
ble $s3, 0, LABEL_0
addi $t0, $s3, -1
sw $ra, -28($sp)
sw $t0, -32($sp)
sw $s2, -36($sp)
sw $s1, -40($sp)
sw $s0, -44($sp)
sw $t0, 0($sp)
addi $sp, $sp, -48
jal hanoi
addi $sp, $sp, 48
lw $ra, -28($sp)
la $a0, s$0
addi $v0, $0, 4
syscall
addi $v0, $0, 11
addi $a0, $0, 10
syscall
addi $v0, $0, 1
addu $a0, $s3, $0
syscall
addi $v0, $0, 11
addi $a0, $0, 10
syscall
la $a0, s$1
addi $v0, $0, 4
syscall
addi $v0, $0, 11
addi $a0, $0, 10
syscall
addi $v0, $0, 11
addu $a0, $s2, $0
syscall
addi $v0, $0, 11
addi $a0, $0, 10
syscall
la $a0, s$2
addi $v0, $0, 4
syscall
addi $v0, $0, 11
addi $a0, $0, 10
syscall
addi $v0, $0, 11
addu $a0, $s1, $0
syscall
addi $v0, $0, 11
addi $a0, $0, 10
syscall
addi $t0, $s3, -1
sw $ra, -28($sp)
sw $t0, -32($sp)
sw $s0, -36($sp)
sw $s2, -40($sp)
sw $s1, -44($sp)
sw $t0, 0($sp)
addi $sp, $sp, -48
jal hanoi
addi $sp, $sp, 48
lw $ra, -28($sp)
LABEL_0:
lw $s0, -12($sp)
lw $s1, -16($sp)
lw $s2, -20($sp)
lw $s3, -24($sp)
jr $ra
Fibonacci:
lw $t0, 4($sp)
bne $t0, 0, LABEL_1
addi $v0, $0, 0
jr $ra
LABEL_1:
lw $t0, 4($sp)
bne $t0, 1, LABEL_2
addi $v0, $0, 1
jr $ra
LABEL_2:
lw $t0, 4($sp)
addi $t1, $t0, -1
sw $ra, -24($sp)
sw $t1, -28($sp)
sw $t1, 0($sp)
addi $sp, $sp, -32
jal Fibonacci
addi $sp, $sp, 32
lw $ra, -24($sp)
addu $t0, $v0, $0
lw $t1, 4($sp)
addi $t2, $t1, -2
sw $ra, -24($sp)
sw $t2, -28($sp)
sw $t2, -8($sp)
sw $t0, -4($sp)
addi $sp, $sp, -32
jal Fibonacci
addi $sp, $sp, 32
lw $ra, -24($sp)
lw $t0, -4($sp)
addu $t1, $t0, $v0
addu $v0, $t1, $0
jr $ra
fac:
lw $t0, 4($sp)
bne $t0, 1, LABEL_3
addi $v0, $0, 1
jr $ra
LABEL_3:
lw $t0, 4($sp)
addi $t1, $t0, -1
sw $ra, -16($sp)
sw $t1, -20($sp)
sw $t1, 0($sp)
addi $sp, $sp, -24
jal fac
addi $sp, $sp, 24
lw $ra, -16($sp)
lw $t0, 4($sp)
mul $t1, $t0, $v0
addu $v0, $t1, $0
jr $ra
testRecursion:
sw $ra, -56($sp)
addi $t9, $0, 2
sw $t9, -60($sp)
addi $sp, $sp, -64
jal fac
addi $sp, $sp, 64
lw $ra, -56($sp)
addu $t0, $v0, $0
sw $ra, -56($sp)
addi $t9, $0, 3
sw $t9, -60($sp)
sw $t0, 0($sp)
addi $sp, $sp, -64
jal fac
addi $sp, $sp, 64
lw $ra, -56($sp)
lw $t0, 0($sp)
mul $t1, $t0, $v0
sw $ra, -56($sp)
sw $t1, -60($sp)
sw $t1, -8($sp)
addi $sp, $sp, -64
jal Fibonacci
addi $sp, $sp, 64
lw $ra, -56($sp)
addu $t0, $v0, $0
sw $ra, -56($sp)
addi $t9, $0, 3
sw $t9, -60($sp)
sw $t0, -12($sp)
addi $sp, $sp, -64
jal Fibonacci
addi $sp, $sp, 64
lw $ra, -56($sp)
addu $t0, $v0, $0
sw $ra, -56($sp)
addi $t9, $0, 4
sw $t9, -60($sp)
sw $t0, -16($sp)
addi $sp, $sp, -64
jal Fibonacci
addi $sp, $sp, 64
lw $ra, -56($sp)
lw $t0, -16($sp)
addu $t1, $t0, $v0
sw $ra, -56($sp)
sw $t1, -60($sp)
sw $t1, -24($sp)
addi $sp, $sp, -64
jal fac
addi $sp, $sp, 64
lw $ra, -56($sp)
lw $t0, -12($sp)
sub $t1, $t0, $v0
sw $ra, -56($sp)
addi $t9, $0, 2
sw $t9, -60($sp)
sw $t1, -32($sp)
addi $sp, $sp, -64
jal Fibonacci
addi $sp, $sp, 64
lw $ra, -56($sp)
addu $t0, $v0, $0
sw $ra, -56($sp)
addi $t9, $0, 3
sw $t9, -60($sp)
sw $t0, -36($sp)
addi $sp, $sp, -64
jal Fibonacci
addi $sp, $sp, 64
lw $ra, -56($sp)
lw $t0, -36($sp)
addu $t1, $t0, $v0
sw $ra, -56($sp)
sw $t1, -60($sp)
sw $t1, -44($sp)
addi $sp, $sp, -64
jal fac
addi $sp, $sp, 64
lw $ra, -56($sp)
lw $t0, -32($sp)
div $t0, $v0
mflo $t1
sw $ra, -56($sp)
sw $t1, -60($sp)
addi $t9, $0, 97
sw $t9, -64($sp)
addi $t9, $0, 98
sw $t9, -68($sp)
addi $t9, $0, 99
sw $t9, -72($sp)
sw $t1, -52($sp)
addi $sp, $sp, -76
jal hanoi
addi $sp, $sp, 76
lw $ra, -56($sp)
jr $ra
main:
la $a0, s$3
addi $v0, $0, 4
syscall
addi $v0, $0, 11
addi $a0, $0, 10
syscall
la $a0, s$4
addi $v0, $0, 4
syscall
addi $v0, $0, 11
addi $a0, $0, 10
syscall
sw $ra, 0($sp)
addi $sp, $sp, -4
jal testRecursion
addi $sp, $sp, 4
lw $ra, 0($sp)
la $a0, s$5
addi $v0, $0, 4
syscall
addi $v0, $0, 11
addi $a0, $0, 10
syscall
jr $ra
